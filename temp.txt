? will show shortcuts in slide presentation
Press »ESC« or »O« keys to toggle the overview mode
--

output: 
  html_document:
    code_folding: hide
    
    --
    
output: html_notebook

--
output:
  html_document:
    df_print: paged
---

colors coolors.co

F0FBEF
F0FCD9
E7FDCF
FDFEB1
DCFDF6

FOFCD9
E&fdcf

---
don't use 'if' inside thoese mutate or functions called from muate - use ifelse()
because things are vectorized. Not intuitive. If you print(), you get whole vercotr
even when you only passed one element.

--

For many of the examples below, I will be using the ~fun(.x) shorthand for writing temporary functions.
 
 mutate_at(vars(-columnA), function(x) { if(is.logical(x)) x else NA})
 shorted as .. ~ if(is.logical(.x)) x else NA...
--

#pasywa %>% select_at(vars(ends_with('_sw')))
#pasywa %>% select_at(vars(!matches("_sk|_st")))

#pasywa %>% select(ends_with('_sw'))

--

output:
  revealjs::revealjs_presentation:
    transition: none
    self_contained: true
    css: slides.css
    theme: night
  beamer_presentation:
    toc: false
    incremental: false
    
    
  output: 
  revealjs::revealjs_presentation:
    self_contained: false
    reveal_plugins: ["notes", "search"]
    theme: sky
    
    
self_contained	
Produce a standalone HTML file with no external dependencies, using data: URIs to incorporate the contents of linked scripts, stylesheets, images, and videos. Note that even for self contained documents MathJax is still loaded externally (this is necessary because of it's size).

<section>
    <img width="300" src="imgs/sklep.jpg">
    <img width="300" src="imgs/sklep2.jpg">
</section>

 <div class="fragment">
  - Dino to wiodący gracz w segmencie średniej wielkości.
  </div>
<div class="fragment">
All Shiny guarantees is that **when you ask a reactive expression for an answer, you get an up-to-date one**.
</div>

theme: moon, solarized, sky, beige, serif

Wskaźniki:
- Wskaźnik cyklu zapasów
- Wskaźnik rentowności sprzedaży
- Marża zysku netto
- Wskaźniki zadłużenia

dino_gr %>%
  gather("Type", "Value",-rok) %>%
  ggplot(aes(rok, Value, fill = Type)) +
  geom_bar(position = "dodge", stat = "identity") +
  theme_bw()
  
  ==
  
  
      theme: serif
      
  title: "Analiza RPP spóki Dino"
author: "[425998]()"
date: 28/04/2020
  
    
    
    
    
```{r echo = FALSE}
dino_gr <- tribble(
  ~rok, ~kurs, ~`przychody ze sprzedaży`, ~`zysk netto`, ~`dług netto`, ~`liczba sklepów`,
  "2017",   78.80, 4462.8, 213.6, 485, 775,
  "2018",   95.85, 5838.5, 307.5, 566, 977,
  "2019",   143.90, 7646.5, 410.9, 749, 1218,
) 
dino_gr %>% kable() %>% kable_styling()
```

<div class="notes">

Jak widać, przychody ze sprzedaży prawie się podwoił, chociaż 'przychody ze sprzedaży' rośnie mniej niż zysk netto. Dług netto wrósł o prawie 55%. 
</div>

